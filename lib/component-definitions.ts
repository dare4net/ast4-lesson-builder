import type { ComponentDefinition } from "@/types/lesson"

export const componentDefinitions: ComponentDefinition[] = [
  // Content Components
  {
    type: "paragraph",
    label: "Paragraph",
    category: "content",
    description: "Text block with formatting...",
    icon: "üìù",
    defaultProps: {
      content: "Enter your text here...",
      align: "left",
    },
    propDefinitions: [
      {
        name: "content",
        label: "Content",
        type: "richText",
        required: true,
        defaultValue: "Enter your text here...",
      },
      {
        name: "align",
        label: "Alignment",
        type: "select",
        required: false,
        defaultValue: "left",
        options: [
          { label: "Left", value: "left" },
          { label: "Center", value: "center" },
          { label: "Right", value: "right" },
          { label: "Justify", value: "justify" },
        ],
      },
    ],
  },
  {
    type: "heading",
    label: "Heading",
    category: "content",
    description: "Section title or subtitle...",
    icon: "üìå",
    defaultProps: {
      content: "Heading Text",
      level: 2,
      align: "left",
    },
    propDefinitions: [
      {
        name: "content",
        label: "Content",
        type: "string",
        required: true,
        defaultValue: "Heading Text",
      },
      {
        name: "level",
        label: "Heading Level",
        type: "select",
        required: true,
        defaultValue: 2,
        options: [
          { label: "H1 (Largest)", value: 1 },
          { label: "H2", value: 2 },
          { label: "H3", value: 3 },
          { label: "H4", value: 4 },
          { label: "H5", value: 5 },
          { label: "H6 (Smallest)", value: 6 },
        ],
      },
      {
        name: "align",
        label: "Alignment",
        type: "select",
        required: false,
        defaultValue: "left",
        options: [
          { label: "Left", value: "left" },
          { label: "Center", value: "center" },
          { label: "Right", value: "right" },
        ],
      },
    ],
  },
  {
    type: "bulletList",
    label: "Bullet List",
    category: "content",
    description: "Ordered or unordered list...",
    icon: "üìã",
    defaultProps: {
      items: ["Item 1", "Item 2", "Item 3"],
      type: "unordered",
    },
    propDefinitions: [
      {
        name: "items",
        label: "List Items",
        type: "componentArray",
        required: true,
        defaultValue: ["Item 1", "Item 2", "Item 3"],
      },
      {
        name: "type",
        label: "List Type",
        type: "select",
        required: true,
        defaultValue: "unordered",
        options: [
          { label: "Unordered (Bullets)", value: "unordered" },
          { label: "Ordered (Numbers)", value: "ordered" },
        ],
      },
    ],
  },
  {
    type: "table",
    label: "Table",
    category: "content",
    description: "Organize data in rows and columns...",
    icon: "üìä",
    defaultProps: {
      rows: 2,
      columns: 2,
      data: [
        ["Cell 1", "Cell 2"],
        ["Cell 3", "Cell 4"],
      ],
    },
    propDefinitions: [
      {
        name: "rows",
        label: "Number of Rows",
        type: "number",
        required: true,
        defaultValue: 2,
        min: 1,
        max: 10,
      },
      {
        name: "columns",
        label: "Number of Columns",
        type: "number",
        required: true,
        defaultValue: 2,
        min: 1,
        max: 10,
      },
      {
        name: "data",
        label: "Table Data",
        type: "componentArray",
        required: true,
        defaultValue: [
          ["Cell 1", "Cell 2"],
          ["Cell 3", "Cell 4"],
        ],
      },
    ],
  },
  {
    type: "image",
    label: "Image",
    category: "content",
    description: "Display image with caption...",
    icon: "üñºÔ∏è",
    defaultProps: {
      src: "/placeholder.svg?height=300&width=400",
      alt: "Image description",
      caption: "",
      width: "100%",
    },
    propDefinitions: [
      {
        name: "src",
        label: "Image Source",
        type: "image",
        required: true,
        defaultValue: "/placeholder.svg?height=300&width=400",
      },
      {
        name: "alt",
        label: "Alt Text",
        type: "string",
        required: true,
        defaultValue: "Image description",
      },
      {
        name: "caption",
        label: "Caption",
        type: "string",
        required: false,
        defaultValue: "",
      },
      {
        name: "width",
        label: "Width",
        type: "string",
        required: false,
        defaultValue: "100%",
      },
    ],
  },
  {
    type: "video",
    label: "Video",
    category: "content",
    description: "Embed video from URL...",
    icon: "üé•",
    defaultProps: {
      src: "/placeholder.mp4",
      poster: "/placeholder.jpg",
      caption: "",
      controls: true,
      autoplay: false,
      loop: false,
    },
    propDefinitions: [
      {
        name: "src",
        label: "Video Source",
        type: "video",
        required: true,
        defaultValue: "/placeholder.mp4",
      },
      {
        name: "poster",
        label: "Poster Image",
        type: "image",
        required: false,
        defaultValue: "/placeholder.jpg",
      },
      {
        name: "caption",
        label: "Caption",
        type: "string",
        required: false,
        defaultValue: "",
      },
      {
        name: "controls",
        label: "Show Controls",
        type: "boolean",
        required: false,
        defaultValue: true,
      },
      {
        name: "autoplay",
        label: "Autoplay",
        type: "boolean",
        required: false,
        defaultValue: false,
      },
      {
        name: "loop",
        label: "Loop",
        type: "boolean",
        required: false,
        defaultValue: false,
      },
    ],
  },
  {
    type: "codeBlock",
    label: "Code Block",
    category: "content",
    description: "Code with syntax highlighting...",
    icon: "üíª",
    defaultProps: {
      language: "javascript",
      code: "// Write your code here\nconsole.log('Hello, world!');",
    },
    propDefinitions: [
      {
        name: "language",
        label: "Programming Language",
        type: "select",
        required: true,
        defaultValue: "javascript",
        options: [
          { label: "JavaScript", value: "javascript" },
          { label: "Python", value: "python" },
          { label: "Java", value: "java" },
          { label: "C#", value: "csharp" },
        ],
      },
      {
        name: "code",
        label: "Code",
        type: "string",
        required: true,
        defaultValue: "// Write your code here\nconsole.log('Hello, world!');",
      },
    ],
  },
  {
    type: "quote",
    label: "Quote",
    category: "content",
    description: "Highlight text as quote...",
    icon: "üí≠",
    defaultProps: {
      text: "Insert your quote here...",
      author: "Author Name",
      align: "left",
    },
    propDefinitions: [
      {
        name: "text",
        label: "Quote Text",
        type: "richText",
        required: true,
        defaultValue: "Insert your quote here...",
      },
      {
        name: "author",
        label: "Author",
        type: "string",
        required: false,
        defaultValue: "Author Name",
      },
      {
        name: "align",
        label: "Alignment",
        type: "select",
        required: false,
        defaultValue: "left",
        options: [
          { label: "Left", value: "left" },
          { label: "Center", value: "center" },
          { label: "Right", value: "right" },
        ],
      },
    ],
  },

  // Interactive Components
  {
    type: "quiz",
    label: "Quiz",
    category: "interactive",
    description: "Multiple choice questions...",
    icon: "‚ùì",
    defaultProps: {
      questions: [
        {
          id: "q1",
          question: "What is the capital of France?",
          options: [
            { id: "1", text: "London", isCorrect: false },
            { id: "2", text: "Paris", isCorrect: true },
            { id: "3", text: "Berlin", isCorrect: false },
            { id: "4", text: "Madrid", isCorrect: false },
          ],
          explanation: "Paris is the capital and most populous city of France.",
        },
      ],
      showExplanation: true,
      shuffleOptions: false,
      points: 10,
    },
    propDefinitions: [
      {
        name: "questions",
        label: "Questions",
        type: "componentArray",
        required: true,
        defaultValue: [
          {
            id: "q1",
            question: "What is the capital of France?",
            options: [
              { id: "1", text: "London", isCorrect: false },
              { id: "2", text: "Paris", isCorrect: true },
              { id: "3", text: "Berlin", isCorrect: false },
              { id: "4", text: "Madrid", isCorrect: false },
            ],
            explanation: "Paris is the capital and most populous city of France.",
          },
        ],
      },
      {
        name: "showExplanation",
        label: "Show Explanation",
        type: "boolean",
        required: false,
        defaultValue: true,
      },
      {
        name: "shuffleOptions",
        label: "Shuffle Options",
        type: "boolean",
        required: false,
        defaultValue: false,
      },
      {
        name: "points",
        label: "Points Per Question",
        type: "number",
        required: false,
        defaultValue: 10,
        min: 0,
        max: 100,
      },
    ],
  },
  {
    type: "poll",
    label: "Poll",
    category: "interactive",
    description: "Real-time student responses...",
    icon: "üìä",
    defaultProps: {
      question: "What's your favorite color?",
      options: [
        { id: "1", text: "Red" },
        { id: "2", text: "Blue" },
        { id: "3", text: "Green" },
        { id: "4", text: "Yellow" },
      ],
      multipleAnswers: false,
    },
    propDefinitions: [
      {
        name: "question",
        label: "Poll Question",
        type: "string",
        required: true,
        defaultValue: "What's your favorite color?",
      },
      {
        name: "options",
        label: "Poll Options",
        type: "componentArray",
        required: true,
        defaultValue: [
          { id: "1", text: "Red" },
          { id: "2", text: "Blue" },
          { id: "3", text: "Green" },
          { id: "4", text: "Yellow" },
        ],
      },
      {
        name: "multipleAnswers",
        label: "Allow Multiple Answers",
        type: "boolean",
        required: false,
        defaultValue: false,
      },
    ],
  },
  {
    type: "dragDrop",
    label: "Drag & Drop",
    category: "interactive",
    description: "Match items by dragging...",
    icon: "üéØ",
    defaultProps: {
      title: "Arrange in the correct order",
      items: [
        { id: "1", text: "First item", correctIndex: 0 },
        { id: "2", text: "Second item", correctIndex: 1 },
        { id: "3", text: "Third item", correctIndex: 2 },
      ],
      shuffled: true,
      points: 15,
    },
    propDefinitions: [
      {
        name: "title",
        label: "Title",
        type: "string",
        required: false,
        defaultValue: "Arrange in the correct order",
      },
      {
        name: "items",
        label: "Items",
        type: "componentArray",
        required: true,
        defaultValue: [
          { id: "1", text: "First item", correctIndex: 0 },
          { id: "2", text: "Second item", correctIndex: 1 },
          { id: "3", text: "Third item", correctIndex: 2 },
        ],
      },
      {
        name: "shuffled",
        label: "Shuffle Items",
        type: "boolean",
        required: false,
        defaultValue: true,
      },
      {
        name: "points",
        label: "Points",
        type: "number",
        required: false,
        defaultValue: 15,
        min: 0,
        max: 100,
      },
    ],
  },
  {
    type: "matchingPairs",
    label: "Matching Pairs",
    category: "interactive",
    description: "Match related items...",
    icon: "üîÑ",
    defaultProps: {
      title: "Match the items",
      pairs: [
        { id: "1", left: "Dog", right: "Bark" },
        { id: "2", left: "Cat", right: "Meow" },
        { id: "3", left: "Cow", right: "Moo" },
      ],
      shuffled: true,
      points: 15,
    },
    propDefinitions: [
      {
        name: "title",
        label: "Title",
        type: "string",
        required: false,
        defaultValue: "Match the items",
      },
      {
        name: "pairs",
        label: "Matching Pairs",
        type: "componentArray",
        required: true,
        defaultValue: [
          { id: "1", left: "Dog", right: "Bark" },
          { id: "2", left: "Cat", right: "Meow" },
          { id: "3", left: "Cow", right: "Moo" },
        ],
      },
      {
        name: "shuffled",
        label: "Shuffle Items",
        type: "boolean",
        required: false,
        defaultValue: true,
      },
      {
        name: "points",
        label: "Points",
        type: "number",
        required: false,
        defaultValue: 15,
        min: 0,
        max: 100,
      },
    ],
  },
  {
    type: "fillInTheBlank",
    label: "Fill in Blank",
    category: "interactive",
    description: "Complete missing words...",
    icon: "‚úèÔ∏è",
    defaultProps: {
      title: "Fill in the blanks",
      text: "The capital of France is {{blank}} and the capital of Japan is {{blank}}.",
      blanks: [
        { id: "b1", answer: "Paris", alternatives: ["paris"] },
        { id: "b2", answer: "Tokyo", alternatives: ["tokyo"] },
      ],
      caseSensitive: false,
      points: 10,
    },
    propDefinitions: [
      {
        name: "title",
        label: "Title",
        type: "string",
        required: false,
        defaultValue: "Fill in the blanks",
      },
      {
        name: "text",
        label: "Text with Blanks",
        type: "string",
        required: true,
        defaultValue: "The capital of France is {{blank}} and the capital of Japan is {{blank}}.",
      },
      {
        name: "blanks",
        label: "Blanks",
        type: "componentArray",
        required: true,
        defaultValue: [
          { id: "b1", answer: "Paris", alternatives: ["paris"] },
          { id: "b2", answer: "Tokyo", alternatives: ["tokyo"] },
        ],
      },
      {
        name: "caseSensitive",
        label: "Case Sensitive",
        type: "boolean",
        required: false,
        defaultValue: false,
      },
      {
        name: "points",
        label: "Points",
        type: "number",
        required: false,
        defaultValue: 10,
        min: 0,
        max: 100,
      },
    ],
  },
  {
    type: "flashcards",
    label: "Flashcards",
    category: "interactive",
    description: "Two-sided study cards...",
    icon: "üé¥",
    defaultProps: {
      title: "Flashcards",
      cards: [
        { id: "1", front: "What is the capital of France?", back: "Paris" },
        { id: "2", front: "What is the capital of Japan?", back: "Tokyo" },
        { id: "3", front: "What is the capital of Australia?", back: "Canberra" },
      ],
    },
    propDefinitions: [
      {
        name: "title",
        label: "Title",
        type: "string",
        required: false,
        defaultValue: "Flashcards",
      },
      {
        name: "cards",
        label: "Flashcards",
        type: "componentArray",
        required: true,
        defaultValue: [
          { id: "1", front: "What is the capital of France?", back: "Paris" },
          { id: "2", front: "What is the capital of Japan?", back: "Tokyo" },
          { id: "3", front: "What is the capital of Australia?", back: "Canberra" },
        ],
      },
    ],
  },
  {
    type: "codeEditor",
    label: "Code Editor",
    category: "interactive",
    description: "Write and test code...",
    icon: "üë®‚Äçüíª",
    defaultProps: {
      title: "Code Editor",
      initialCode: "// Write your code here\nconsole.log('Hello, world!');",
      language: "javascript",
      readOnly: false,
      testCases: [
        {
          id: "test1",
          input: "",
          expectedOutput: "Hello, world!",
        },
      ],
      points: 10,
    },
    propDefinitions: [
      {
        name: "title",
        label: "Title",
        type: "string",
        required: false,
        defaultValue: "Code Editor",
      },
      {
        name: "initialCode",
        label: "Initial Code",
        type: "string",
        required: true,
        defaultValue: "// Write your code here\nconsole.log('Hello, world!');",
      },
      {
        name: "language",
        label: "Programming Language",
        type: "select",
        required: true,
        defaultValue: "javascript",
        options: [
          { label: "JavaScript", value: "javascript" },
          { label: "Python", value: "python" },
          { label: "Java", value: "java" },
          { label: "C#", value: "csharp" },
        ],
      },
      {
        name: "readOnly",
        label: "Read Only",
        type: "boolean",
        required: false,
        defaultValue: false,
      },
      {
        name: "testCases",
        label: "Test Cases",
        type: "componentArray",
        required: false,
        defaultValue: [
          {
            id: "test1",
            input: "",
            expectedOutput: "Hello, world!",
          },
        ],
      },
      {
        name: "points",
        label: "Points",
        type: "number",
        required: false,
        defaultValue: 10,
        min: 0,
        max: 100,
      },
    ],
  },
  {
    type: "clickableImage",
    label: "Clickable Image",
    category: "interactive",
    description: "Add interactive hotspots...",
    icon: "üñ±Ô∏è",
    defaultProps: {
      title: "Interactive Image",
      image: "/placeholder.svg?height=400&width=600",
      hotspots: [
        { id: "1", x: 0.3, y: 0.4, label: "Point 1", content: "This is the first point of interest" },
        { id: "2", x: 0.7, y: 0.6, label: "Point 2", content: "This is the second point of interest" },
      ],
    },
    propDefinitions: [
      {
        name: "title",
        label: "Title",
        type: "string",
        required: false,
        defaultValue: "Interactive Image",
      },
      {
        name: "image",
        label: "Image",
        type: "image",
        required: true,
        defaultValue: "/placeholder.svg?height=400&width=600",
      },
      {
        name: "hotspots",
        label: "Hotspots",
        type: "componentArray",
        required: true,
        defaultValue: [
          { id: "1", x: 0.3, y: 0.4, label: "Point 1", content: "This is the first point of interest" },
          { id: "2", x: 0.7, y: 0.6, label: "Point 2", content: "This is the second point of interest" },
        ],
      },
    ],
  },
  {
    type: "hotspot",
    label: "Hotspot",
    category: "interactive",
    description: "Clickable image regions...",
    icon: "üéØ",
    defaultProps: {
      title: "Interactive Image",
      image: "/placeholder.svg?height=400&width=600",
      hotspots: [
        { id: "1", x: 0.3, y: 0.4, label: "Point 1", content: "This is the first point of interest" },
        { id: "2", x: 0.7, y: 0.6, label: "Point 2", content: "This is the second point of interest" },
      ],
    },
    propDefinitions: [
      {
        name: "title",
        label: "Title",
        type: "string",
        required: false,
        defaultValue: "Interactive Image",
      },
      {
        name: "image",
        label: "Image",
        type: "image",
        required: true,
        defaultValue: "/placeholder.svg?height=400&width=600",
      },
      {
        name: "hotspots",
        label: "Hotspots",
        type: "componentArray",
        required: true,
        defaultValue: [
          { id: "1", x: 0.3, y: 0.4, label: "Point 1", content: "This is the first point of interest" },
          { id: "2", x: 0.7, y: 0.6, label: "Point 2", content: "This is the second point of interest" },
        ],
      },
    ],
  },

  // Gamified Components
  {
    type: "badgeReveal",
    label: "Badge Reveal",
    category: "gamified",
    description: "Reveal badge on completion...",
    icon: "üèÖ",
    defaultProps: {
      badgeId: "badge1",
      taskCompleted: false,
    },
    propDefinitions: [
      {
        name: "badgeId",
        label: "Badge ID",
        type: "string",
        required: true,
        defaultValue: "badge1",
      },
      {
        name: "taskCompleted",
        label: "Task Completed",
        type: "boolean",
        required: true,
        defaultValue: false,
      },
    ],
  },
  {
    type: "scoreBoard",
    label: "Score Board",
    category: "gamified",
    description: "Show points and progress...",
    icon: "üèÜ",
    defaultProps: {
      title: "Your Score",
      showTotal: true,
      showPercentage: true,
      animation: true,
    },
    propDefinitions: [
      {
        name: "title",
        label: "Title",
        type: "string",
        required: false,
        defaultValue: "Your Score",
      },
      {
        name: "showTotal",
        label: "Show Total Score",
        type: "boolean",
        required: false,
        defaultValue: true,
      },
      {
        name: "showPercentage",
        label: "Show Percentage",
        type: "boolean",
        required: false,
        defaultValue: true,
      },
      {
        name: "animation",
        label: "Animate Score Changes",
        type: "boolean",
        required: false,
        defaultValue: true,
      },
    ],
  },
  {
    type: "miniGame",
    label: "Mini Game",
    category: "gamified",
    description: "Interactive game with score...",
    icon: "üéÆ",
    defaultProps: {
      title: "Catch the Falling Stars",
      instruction: "Catch as many stars as you can",
      maxScore: 100,
      timeLimit: 30,
    },
    propDefinitions: [
      {
        name: "title",
        label: "Title",
        type: "string",
        required: false,
        defaultValue: "Catch the Falling Stars",
      },
      {
        name: "instruction",
        label: "Instructions",
        type: "string",
        required: false,
        defaultValue: "Catch as many stars as you can",
      },
      {
        name: "maxScore",
        label: "Maximum Score",
        type: "number",
        required: false,
        defaultValue: 100,
        min: 1,
        max: 1000,
      },
      {
        name: "timeLimit",
        label: "Time Limit (seconds)",
        type: "number",
        required: false,
        defaultValue: 30,
        min: 5,
        max: 300,
      },
    ],
  },
  {
    type: "progressBar",
    label: "Progress Bar",
    category: "gamified",
    description: "Show completion status...",
    icon: "üìà",
    defaultProps: {
      title: "Course Progress",
      percentage: 0,
      showPercentage: true,
      animation: true,
    },
    propDefinitions: [
      {
        name: "title",
        label: "Title",
        type: "string",
        required: false,
        defaultValue: "Course Progress",
      },
      {
        name: "percentage",
        label: "Completion Percentage",
        type: "number",
        required: true,
        defaultValue: 0,
        min: 0,
        max: 100,
      },
      {
        name: "showPercentage",
        label: "Show Percentage",
        type: "boolean",
        required: false,
        defaultValue: true,
      },
      {
        name: "animation",
        label: "Animate Progress Changes",
        type: "boolean",
        required: false,
        defaultValue: true,
      },
    ],
  },

  // Structure Components
  {
    type: "slideTitle",
    label: "Slide Title",
    category: "structure",
    description: "Main slide heading...",
    icon: "üìë",
    defaultProps: {
      content: "Slide Title",
      align: "center",
      color: "black",
      backgroundColor: "transparent",
    },
    propDefinitions: [
      {
        name: "content",
        label: "Title Content",
        type: "string",
        required: true,
        defaultValue: "Slide Title",
      },
      {
        name: "align",
        label: "Text Alignment",
        type: "select",
        required: false,
        defaultValue: "center",
        options: [
          { label: "Left", value: "left" },
          { label: "Center", value: "center" },
          { label: "Right", value: "right" },
        ],
      },
      {
        name: "color",
        label: "Text Color",
        type: "color",
        required: false,
        defaultValue: "black",
      },
      {
        name: "backgroundColor",
        label: "Background Color",
        type: "color",
        required: false,
        defaultValue: "transparent",
      },
    ],
  },
  {
    type: "lessonIntro",
    label: "Lesson Intro",
    category: "structure",
    description: "Introduction section...",
    icon: "üëã",
    defaultProps: {
      title: "Welcome to the Lesson",
      content: "This is where the lesson introduction goes.",
      video: "/placeholder.mp4",
      image: "/placeholder.svg?height=200&width=300",
    },
    propDefinitions: [
      {
        name: "title",
        label: "Section Title",
        type: "string",
        required: true,
        defaultValue: "Welcome to the Lesson",
      },
      {
        name: "content",
        label: "Introduction Content",
        type: "richText",
        required: true,
        defaultValue: "This is where the lesson introduction goes.",
      },
      {
        name: "video",
        label: "Introduction Video",
        type: "video",
        required: false,
        defaultValue: "/placeholder.mp4",
      },
      {
        name: "image",
        label: "Introduction Image",
        type: "image",
        required: false,
        defaultValue: "/placeholder.svg?height=200&width=300",
      },
    ],
  },
  {
    type: "lessonSummary",
    label: "Lesson Summary",
    category: "structure",
    description: "Key takeaways section...",
    icon: "üìù",
    defaultProps: {
      title: "Lesson Summary",
      content: "This is where the lesson summary goes.",
      showKeyPoints: true,
      keyPoints: [
        "Key point 1: Important information",
        "Key point 2: Additional details",
        "Key point 3: Conclusion",
      ],
    },
    propDefinitions: [
      {
        name: "title",
        label: "Section Title",
        type: "string",
        required: true,
        defaultValue: "Lesson Summary",
      },
      {
        name: "content",
        label: "Summary Content",
        type: "richText",
        required: true,
        defaultValue: "This is where the lesson summary goes.",
      },
      {
        name: "showKeyPoints",
        label: "Show Key Points",
        type: "boolean",
        required: false,
        defaultValue: true,
      },
      {
        name: "keyPoints",
        label: "Key Points",
        type: "componentArray",
        required: false,
        defaultValue: [
          "Key point 1: Important information",
          "Key point 2: Additional details",
          "Key point 3: Conclusion",
        ],
      },
    ],
  },
  {
    type: "lessonComplete",
    label: "Lesson Complete",
    category: "structure",
    description: "Final completion slide...",
    icon: "üéâ",
    defaultProps: {
      title: "Congratulations!",
      content: "You've completed the lesson.",
      showReplayButton: true,
      showNextLessonButton: true,
    },
    propDefinitions: [
      {
        name: "title",
        label: "Completion Title",
        type: "string",
        required: true,
        defaultValue: "Congratulations!",
      },
      {
        name: "content",
        label: "Completion Content",
        type: "richText",
        required: true,
        defaultValue: "You've completed the lesson.",
      },
      {
        name: "showReplayButton",
        label: "Show Replay Button",
        type: "boolean",
        required: false,
        defaultValue: true,
      },
      {
        name: "showNextLessonButton",
        label: "Show Next Lesson Button",
        type: "boolean",
        required: false,
        defaultValue: true,
      },
    ],
  },

  // Add more component definitions here...
]
